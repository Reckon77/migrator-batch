-- Autogenerated: do not edit this file

CREATE TABLE BATCH_JOB_INSTANCE  (
	JOB_INSTANCE_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT ,
	JOB_NAME VARCHAR(100) NOT NULL,
	JOB_KEY VARCHAR(32) NOT NULL,
	constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
) ENGINE=InnoDB;

CREATE TABLE BATCH_JOB_EXECUTION  (
	JOB_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT  ,
	JOB_INSTANCE_ID BIGINT NOT NULL,
	CREATE_TIME DATETIME(6) NOT NULL,
	START_TIME DATETIME(6) DEFAULT NULL ,
	END_TIME DATETIME(6) DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED DATETIME(6),
	constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
	references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS  (
	JOB_EXECUTION_ID BIGINT NOT NULL ,
	PARAMETER_NAME VARCHAR(100) NOT NULL ,
	PARAMETER_TYPE VARCHAR(100) NOT NULL ,
	PARAMETER_VALUE VARCHAR(2500) ,
	IDENTIFYING CHAR(1) NOT NULL ,
	constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_STEP_EXECUTION  (
	STEP_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT NOT NULL,
	STEP_NAME VARCHAR(100) NOT NULL,
	JOB_EXECUTION_ID BIGINT NOT NULL,
	CREATE_TIME DATETIME(6) NOT NULL,
	START_TIME DATETIME(6) DEFAULT NULL ,
	END_TIME DATETIME(6) DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	COMMIT_COUNT BIGINT ,
	READ_COUNT BIGINT ,
	FILTER_COUNT BIGINT ,
	WRITE_COUNT BIGINT ,
	READ_SKIP_COUNT BIGINT ,
	WRITE_SKIP_COUNT BIGINT ,
	PROCESS_SKIP_COUNT BIGINT ,
	ROLLBACK_COUNT BIGINT ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED DATETIME(6),
	constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
	STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT ,
	constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
	references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
	JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT ,
	constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_STEP_EXECUTION_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB;

INSERT INTO BATCH_STEP_EXECUTION_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_STEP_EXECUTION_SEQ);

CREATE TABLE BATCH_JOB_EXECUTION_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB;

INSERT INTO BATCH_JOB_EXECUTION_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_JOB_EXECUTION_SEQ);

CREATE TABLE BATCH_JOB_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB;

INSERT INTO BATCH_JOB_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_JOB_SEQ);

INSERT INTO users (id, name, email, phone, last_updated) VALUES
(1, 'John Doe', 'john.doe@example.com', '1234567890', '1970-01-01 00:00:00'),
(2, 'Jane Smith', 'jane.smith@example.com', '2345678901', '1970-01-01 00:00:00'),
(3, 'Michael Johnson', 'michael.johnson@example.com', '3456789012', '1970-01-01 00:00:00'),
(4, 'Emily Davis', 'emily.davis@example.com', '4567890123', '1970-01-01 00:00:00'),
(5, 'Chris Brown', 'chris.brown@example.com', '5678901234', '1970-01-01 00:00:00');

INSERT INTO accounts (id, account_type, balance, user_id) VALUES
(1, 'Savings', 1500.00, 1),
(2, 'Checking', 2000.00, 1),
(3, 'Savings', 2500.00, 2),
(4, 'Checking', 3000.00, 2),
(5, 'Savings', 3500.00, 3),
(6, 'Checking', 4000.00, 3),
(7, 'Savings', 4500.00, 4),
(8, 'Checking', 5000.00, 4),
(9, 'Savings', 5500.00, 5),
(10, 'Checking', 6000.00, 5);

INSERT INTO transactions (id, transaction_type, amount, timestamp, account_id) VALUES
(1, 'Deposit', 500.00, '2023-03-01 10:00:00', 1),
(2, 'Withdrawal', 200.00, '2023-03-01 11:00:00', 1),
(3, 'Deposit', 1500.00, '2023-03-01 12:00:00', 2),
(4, 'Withdrawal', 1000.00, '2023-03-02 10:00:00', 2),
(5, 'Deposit', 2500.00, '2023-03-02 11:00:00', 3),
(6, 'Withdrawal', 500.00, '2023-03-03 12:00:00', 3),
(7, 'Deposit', 3000.00, '2023-03-03 13:00:00', 4),
(8, 'Withdrawal', 1500.00, '2023-03-04 14:00:00', 4),
(9, 'Deposit', 3500.00, '2023-03-04 15:00:00', 5),
(10, 'Withdrawal', 1000.00, '2023-03-05 16:00:00', 5),
(11, 'Deposit', 4000.00, '2023-03-05 17:00:00', 6),
(12, 'Withdrawal', 1200.00, '2023-03-06 18:00:00', 6),
(13, 'Deposit', 4500.00, '2023-03-06 19:00:00', 7),
(14, 'Withdrawal', 1300.00, '2023-03-07 20:00:00', 7),
(15, 'Deposit', 5000.00, '2023-03-07 21:00:00', 8);

